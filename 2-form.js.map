{"version":3,"file":"2-form.js","sources":["../src/js/localStorage.js","../src/js/2-form.js"],"sourcesContent":["export const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error:', error.message);\n  }\n};\n\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error:', error.message);\n  }\n};\n","import { save, load } from './localStorage';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst feedbackFormEl = document.querySelector('.js-feedback-form');\n\nconst formData = {\n  email: '',\n  message: '',\n};\n\nconst fillFormField = () => {\n  const formDataFromLS = load('feedback-form-state');\n\n  if (!formDataFromLS) return;\n\n  if (formDataFromLS.email) {\n    feedbackFormEl.elements.email.value = formDataFromLS.email;\n    formData.email = formDataFromLS.email;\n  }\n\n  if (formDataFromLS.message) {\n    feedbackFormEl.elements.message.value = formDataFromLS.message;\n    formData.message = formDataFromLS.message;\n  }\n};\n\nconst onFormFieldChange = event => {\n  const { name, value } = event.target;\n\n  formData[name] = value.trim();\n  save('feedback-form-state', formData);\n};\n\nconst onFeedbackFormSubmit = event => {\n  event.preventDefault();\n\n  const { email, message } = formData;\n\n  if (!email || !message) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Fill please all fields!',\n      position: 'topRight',\n      timeout: 3000,\n    });\n    return;\n  }\n\n  console.log('Form submitted with data:', formData);\n\n  feedbackFormEl.reset();\n  localStorage.removeItem('feedback-form-state');\n  formData.email = '';\n  formData.message = '';\n\n  iziToast.success({\n    title: 'Success',\n    message: 'Form submitted successfully!',\n    position: 'topRight',\n    timeout: 3000,\n  });\n};\n\nfillFormField();\n\nfeedbackFormEl.addEventListener('input', onFormFieldChange);\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);\n"],"names":["save","key","value","serializedState","error","load","feedbackFormEl","formData","fillFormField","formDataFromLS","onFormFieldChange","event","name","onFeedbackFormSubmit","email","message","iziToast"],"mappings":"oGAAO,MAAMA,EAAO,CAACC,EAAKC,IAAU,CAClC,GAAI,CACF,MAAMC,EAAkB,KAAK,UAAUD,CAAK,EAC5C,aAAa,QAAQD,EAAKE,CAAe,CAC1C,OAAQC,EAAO,CACd,QAAQ,MAAM,mBAAoBA,EAAM,OAAO,CACnD,CACA,EAEaC,EAAOJ,GAAO,CACzB,GAAI,CACF,MAAME,EAAkB,aAAa,QAAQF,CAAG,EAChD,OAAOE,IAAoB,KAAO,OAAY,KAAK,MAAMA,CAAe,CACzE,OAAQC,EAAO,CACd,QAAQ,MAAM,mBAAoBA,EAAM,OAAO,CACnD,CACA,ECZME,EAAiB,SAAS,cAAc,mBAAmB,EAE3DC,EAAW,CACf,MAAO,GACP,QAAS,EACX,EAEMC,EAAgB,IAAM,CAC1B,MAAMC,EAAiBJ,EAAK,qBAAqB,EAE5CI,IAEDA,EAAe,QACjBH,EAAe,SAAS,MAAM,MAAQG,EAAe,MACrDF,EAAS,MAAQE,EAAe,OAG9BA,EAAe,UACjBH,EAAe,SAAS,QAAQ,MAAQG,EAAe,QACvDF,EAAS,QAAUE,EAAe,SAEtC,EAEMC,EAAoBC,GAAS,CACjC,KAAM,CAAE,KAAAC,EAAM,MAAAV,CAAO,EAAGS,EAAM,OAE9BJ,EAASK,CAAI,EAAIV,EAAM,KAAM,EAC7BF,EAAK,sBAAuBO,CAAQ,CACtC,EAEMM,EAAuBF,GAAS,CACpCA,EAAM,eAAgB,EAEtB,KAAM,CAAE,MAAAG,EAAO,QAAAC,CAAO,EAAKR,EAE3B,GAAI,CAACO,GAAS,CAACC,EAAS,CACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0BACT,SAAU,WACV,QAAS,GACf,CAAK,EACD,MACJ,CAEE,QAAQ,IAAI,4BAA6BT,CAAQ,EAEjDD,EAAe,MAAO,EACtB,aAAa,WAAW,qBAAqB,EAC7CC,EAAS,MAAQ,GACjBA,EAAS,QAAU,GAEnBS,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,+BACT,SAAU,WACV,QAAS,GACb,CAAG,CACH,EAEAR,EAAe,EAEfF,EAAe,iBAAiB,QAASI,CAAiB,EAC1DJ,EAAe,iBAAiB,SAAUO,CAAoB"}